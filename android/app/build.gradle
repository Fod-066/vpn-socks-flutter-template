plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
//    id "stringfog"
}

//// 导入RandomKeyGenerator类，如果使用HardCodeKeyGenerator，更换下类名
//import com.github.megatronking.stringfog.plugin.kg.RandomKeyGenerator
//import com.github.megatronking.stringfog.plugin.StringFogMode
//
//stringfog {
//    // 必要：加解密库的实现类路径，需和上面配置的加解密算法库一致。
//    implementation 'com.github.megatronking.stringfog.xor.StringFogImpl'
//    // 可选：StringFog会自动尝试获取packageName，如果遇到获取失败的情况，可以显式地指定。
//    packageName 'com.github.megatronking.stringfog.app'
//    // 可选：加密开关，默认开启。
//    enable true
//    kg new RandomKeyGenerator()
//    mode StringFogMode.base64
//}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.sweet.vpn.ui"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion = "25.1.8937393"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.test.sweet.vpn"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    lint.disable += "RemoveWorkManagerInitializer"
    packagingOptions.jniLibs.useLegacyPackaging = true
}

flutter {
    source '../..'
}

dependencies {
    implementation(project(":core"))
    implementation("androidx.core:core-ktx:1.9.0")
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("com.google.android.material:material:1.8.0")
}
